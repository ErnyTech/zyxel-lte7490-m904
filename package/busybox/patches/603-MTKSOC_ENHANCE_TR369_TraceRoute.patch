Index: busybox-1_20_1/networking/traceroute.c
===================================================================
--- busybox-1_20_1.orig/networking/traceroute.c	2021-08-06 13:53:11.772536130 +0800
+++ busybox-1_20_1/networking/traceroute.c	2021-08-06 13:55:00.680532637 +0800
@@ -302,7 +302,40 @@
 #include <json/json.h>
 #endif
 /*End ZyXEL zcfg*/
+#ifdef ZCFG_SUPPORT_TR369
+#define DIAG_RESULT_PATH "/var/diagResult"
+uint16_t input_pid;
+#endif
 
+#ifdef ZCFG_SUPPORT_TR369//TR-369 add a:
+#define OPT_STRING "FIlnrdvxt:a:i:m:p:q:s:w:z:f:k:" \
+		    IF_FEATURE_TRACEROUTE_SOURCE_ROUTE("g:") \
+		    "4" IF_TRACEROUTE6("6")
+enum {//TR-369 add OPT_FID
+	OPT_DONT_FRAGMNT = (1 << 0),    /* F */
+	OPT_USE_ICMP     = (1 << 1) * ENABLE_FEATURE_TRACEROUTE_USE_ICMP, /* I */
+	OPT_TTL_FLAG     = (1 << 2),    /* l */
+	OPT_ADDR_NUM     = (1 << 3),    /* n */
+	OPT_BYPASS_ROUTE = (1 << 4),    /* r */
+	OPT_DEBUG        = (1 << 5),    /* d */
+	OPT_VERBOSE      = (1 << 6) * ENABLE_FEATURE_TRACEROUTE_VERBOSE, /* v */
+	OPT_IP_CHKSUM    = (1 << 7),    /* x */
+	OPT_TOS          = (1 << 8),    /* t */
+	OPT_FID          = (1 << 9),    /* a */
+	OPT_DEVICE       = (1 << 10),    /* i */
+	OPT_MAX_TTL      = (1 << 11),   /* m */
+	OPT_PORT         = (1 << 12),   /* p */
+	OPT_NPROBES      = (1 << 13),   /* q */
+	OPT_SOURCE       = (1 << 14),   /* s */
+	OPT_WAITTIME     = (1 << 15),   /* w */
+	OPT_PAUSE_MS     = (1 << 16),   /* z */
+	OPT_FIRST_TTL    = (1 << 17),   /* f */
+	OPT_OUTPUT_RDM   = (1 << 18),  /* k */
+	OPT_SOURCE_ROUTE = (1 << 19) * ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE, /* g */
+	OPT_IPV4         = (1 << (19+ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE)),   /* 4 */
+	OPT_IPV6         = (1 << (20+ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE)) * ENABLE_TRACEROUTE6, /* 6 */
+};
+#else//ZCFG_SUPPORT_TR369
 #define OPT_STRING "FIlnrdvxt:i:m:p:q:s:w:z:f:k:" \
 		    IF_FEATURE_TRACEROUTE_SOURCE_ROUTE("g:") \
 		    "4" IF_TRACEROUTE6("6")
@@ -329,6 +362,7 @@
 	OPT_IPV4         = (1 << (18+ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE)),   /* 4 */
 	OPT_IPV6         = (1 << (19+ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE)) * ENABLE_TRACEROUTE6, /* 6 */
 };
+#endif//ZCFG_SUPPORT_TR369
 #define verbose (option_mask32 & OPT_VERBOSE)
 
 enum {
@@ -873,7 +907,10 @@
 	zcfgMsg_t *sendMsgHdr = NULL;
 	char *recv_str = NULL;
 	int buf_size = 0;
-
+#ifdef ZCFG_SUPPORT_TR369
+	char test[128];//TR-369
+	FILE *fp = NULL;//TR-369
+#endif
 
 	if(!outputRDM) {
 		printf("Standard output only\n");
@@ -892,7 +929,14 @@
 
 	if(payload != NULL)
 		memcpy(sendBuf+sizeof(zcfgMsg_t), payload, payloadLen);
-
+#ifdef ZCFG_SUPPORT_TR369
+	snprintf(test, sizeof(test), "%s.traceroute%u", DIAG_RESULT_PATH, input_pid);
+	fp = fopen(test, "w+");
+	if(fp){
+		fprintf(fp, "%s", payload);
+		fclose(fp);
+	}
+#endif
 	ret = zcfgMsgSendAndGetReply(sendMsgHdr, (zcfgMsg_t **)&recvBuf, 0);
 
 	if(ret == ZCFG_SUCCESS) {
@@ -948,11 +992,22 @@
         unsigned int lastRTT = 0;
 #endif
 	char *outputrdm_str;
-
+#ifdef ZCFG_SUPPORT_TR369
+	char *str_a = NULL;//TR-369
+#endif
 	INIT_G();
 
 	/* minimum 1 arg */
 	opt_complementary = "-1:x-x" IF_FEATURE_TRACEROUTE_SOURCE_ROUTE(":g::");
+#ifdef ZCFG_SUPPORT_TR369//TR-369 add str_a
+	op |= getopt32(argv, OPT_STRING
+		, &tos_str, &str_a, &device, &max_ttl_str, &port_str, &nprobes_str
+		, &source, &waittime_str, &pausemsecs_str, &first_ttl_str, &outputrdm_str
+#if ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE
+		, &source_route_list
+#endif
+	);
+#else//ZCFG_SUPPORT_TR369//TR-369	
 	op |= getopt32(argv, OPT_STRING
 		, &tos_str, &device, &max_ttl_str, &port_str, &nprobes_str
 		, &source, &waittime_str, &pausemsecs_str, &first_ttl_str, &outputrdm_str
@@ -960,6 +1015,7 @@
 		, &source_route_list
 #endif
 	);
+#endif//ZCFG_SUPPORT_TR369//TR-369
 	argv += optind;
 
 #ifdef ZCFG_SUPPORT
@@ -972,6 +1028,11 @@
 #endif
 	if (op & OPT_TOS)
 		tos = xatou_range(tos_str, 0, 255);
+#ifdef ZCFG_SUPPORT_TR369//TR-369	
+	if (op & OPT_FID) { // -a
+		input_pid = xatou16(str_a);
+	}
+#endif	
 	if (op & OPT_MAX_TTL)
 		max_ttl = xatou_range(max_ttl_str, 1, 255);
 	if (op & OPT_PORT)
