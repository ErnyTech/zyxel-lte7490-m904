Index: dnsmasq-2.67/src/rfc2131.c
===================================================================
--- dnsmasq-2.67.orig/src/rfc2131.c	2021-03-31 17:32:09.516992893 +0800
+++ dnsmasq-2.67/src/rfc2131.c	2021-03-31 17:33:23.096992893 +0800
@@ -117,7 +117,7 @@
 	return 0;
 }
 #endif
-  
+char tmpClid[128];//Jessie
 size_t dhcp_reply(struct dhcp_context *context, char *iface_name, int int_index,
 		  size_t sz, time_t now, int unicast_dest, int *is_inform, int pxe, struct in_addr fallback)
 {
@@ -152,6 +152,7 @@
   char *vendor_class_ptr = NULL;
   struct dhcp_ifname *ifname;
 #endif
+int jjjjj;//Jessie
   subnet_addr.s_addr = override.s_addr = 0;
 
   /* set tag with name == interface */
@@ -287,6 +288,31 @@
 	{
 	  clid_len = option_len(opt);
 	  clid = option_ptr(opt, 0);
+	  int iiiiii;
+	  for(iiiiii=0;iiiiii<6;iiiiii++){
+		  if(mess->chaddr[iiiiii]==clid[iiiiii+1]){
+			  //skip
+		  } else {
+			  break;
+		  }
+	  }
+	  if(6==iiiiii){
+		clid_len = 7;
+		for(iiiiii=1; iiiiii< 7; iiiiii++)
+			clid[iiiiii] = int_index;
+		my_syslog(MS_DHCP | LOG_DEBUG, "%s client id==MAC address", __func__);
+	  } else {
+		 my_syslog(MS_DHCP | LOG_DEBUG, "%s client id!=MAC address", __func__);
+	  }
+	}
+	else {
+		my_syslog(MS_DHCP | LOG_DEBUG, "%s NO client id,int_index=%d", __func__, int_index);
+		memset(tmpClid, 0, sizeof(tmpClid));
+		clid_len = 7;
+		clid = tmpClid;
+		clid[0] = 1;
+		for(jjjjj=1; jjjjj< 7; jjjjj++)
+			clid[jjjjj] = int_index;
 	}
 
       /* do we have a lease in store? */
