CURRENT_DIR = $(shell pwd)
COMMON_ZCFG_INCLUDE_DIR = $(CURRENT_DIR)/../../../private/apps/zcfg/include
LIB_PATH = -L$(USRLIBDIR) -L$(INSTALL_DIR)/lib/public -L$(INSTALL_DIR)/lib/private
LINK_LIB = -ljson -lzcfg_msg -lzcfg_fe_rdm_access -lzcfg_fe_rdm_string -lzcfg_fe_rdm_struct -lzlog
INC_PATH = -I$(TOOLCHAIN)/include -I$(COMMON_ZCFG_INCLUDE_DIR) -I.
OBJ_FILES = wanDev.o wanDev_api.o zyExt.o diag.o devInfo.o devTime.o root.o mgmtSrv.o lanDev.o l2bridge.o l3fwd.o lanConfSec.o firewall.o schedule.o qos.o voice.o ipv6Spec.o xgre.o cellular.o
ifeq ($(CONFIG_ZYXEL_SUPPORT_TR181_DEVICEINFO_FAULTMGMT),y)
OBJ_FILES += faultMgmt.o
endif

SSL_LIBS = -lssl -lcrypto
LINK_LIBS += $(SSL_LIBS)

ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
LINK_LIB += -lsqlite3
OBJ_FILES += oneConnect.o
endif

ifeq ($(CONFIG_PACKAGE_zxmppc),y)
OBJ_FILES += xmpp.o
endif

OBJ_FILES += zcfg_fe_msg.o
OBJ_FILES += zcfg_fe_tr98.o

LDFLAGS += $(LIB_PATH) $(LINK_LIB)
CFLAGS += $(INC_PATH)
# -DZCFG_MAPPING_DEBUG_SYSLOG -DZCFG_MAPPING_DEBUG_STDLOG
CFLAGS += -DZCFG_DYNAMIC_NAMEMAPPING -DZCFG_MAPPING_DEBUG_SYSLOG -DZCFG_MAPPING_DEBUG_STDLOG
CFLAGS += -DIPV6INTERFACE_PROFILE -DDHCPV6CLIENT_PROFILE -DIPV6RD_PROFILE -DROUTERADVERTISEMENT_PROFILE -DIPV6SERVER_PROFILE
CFLAGS += -DZCFG_DYNAMIC_NAMEMAPPING -DZCFG_PARM_NAMEMAPPING -DL3IPV6FWD -DROUTEINFO_INTERFACE
CFLAGS += -DZYXEL_EXT=1
CFLAGS += -DZCFG_APPLY_MULTIOBJSET_ON_SESSIONCOMPLETE -DLANIPALIAS

ifeq ($(CONFIG_ZCFG_APPLY_RPC_METHOD_AND_SUBSEQUENT_ROUT),y)
CFLAGS += -DZCFG_APPLY_RPC_METHOD_AND_SUBSEQUENT_ROUT
endif

ifeq ($(CONFIG_ZCFG_TR098181_OBJECT_MAPPING_NUM_NAME_CONVERT),y)
CFLAGS += -DTR098181_OBJECT_MAPPING_NUM_NAME_CONVERT
endif

#ifeq ($(CONFIG_ZCFG_TR181_RPC_OBJECT_HANDLE_ROUT),y)
CFLAGS += -DZCFG_TR181_RPC_OBJECT_HANDLE_ROUT
#endif

#Generic
ifneq ($(strip $(CONFIG_PACKAGE_ZyIMS)),)
CFLAGS += -DCONFIG_PACKAGE_ZyIMS
endif

ifeq ($(CONFIG_XPON_SUPPORT),y)
CFLAGS += -DCONFIG_XPON_SUPPORT
endif

ifeq ($(CONFIG_LTE_SUPPORT),y)
CFLAGS += -DCONFIG_LTE_SUPPORT
endif

ifeq ($(CONFIG_ZYXEL_CELLWAN_WITH_LTE_MODULE_TEMPERATURE),y)
CFLAGS += -DZYXEL_CELLWAN_WITH_LTE_MODULE_TEMPERATURE
endif

ifeq ($(strip $(CONFIG_PACKAGE_tmsctl)),y)
CFLAGS += -DZYXEL_ETHOAM_TMSCTL
endif

ifeq ($(strip $(CONFIG_ZYXEL_DL_DIAG_CALCULATION)),y)
CFLAGS += -DZYXEL_DL_DIAG_CALCULATION
endif

ifeq ($(strip $(CONFIG_ZYXEL_TR69_SUPPLEMENTAL_ACS)),y)
CFLAGS += -DZYXEL_TR69_SUPPLEMENTAL_ACS
endif

#One Connect
ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
CFLAGS += -DONECONNECT
endif
ifeq ($(CONFIG_ZYXEL_HOSTPOLLING),y)
CFLAGS += -DHOSTPOLLING
endif

#Ap Steering
ifeq ($(CONFIG_ZYXEL_AP_STEERING),y)
CFLAGS += -DZYXEL_AP_STEERING
endif

#Proximity Sensor
ifeq ($(CONFIG_PROXIMITY_SENSOR_SUPPORT),y)
CFLAGS += -DPROXIMITY_SENSOR_SUPPORT
endif

#support SFP module
ifeq ($(CONFIG_ZYXEL_SFP_MODULE_SUPPORT),y)
CFLAGS += -DZYXEL_SFP_MODULE_SUPPORT
endif

ifeq ($(strip $(ZYXEL)),y)
CFLAGS += -DZYXEL_EXT=1
endif

ifeq ($(CONFIG_ZyXEL_IPP_PRINTSERVER),y)
CFLAGS += -DZyXEL_IPP_PRINTSERVER
endif

ifeq ($(CONFIG_ZyXEL_DHCP_OPTION125),y)
CFLAGS += -DZyXEL_DHCP_OPTION125
endif

#TR69 Data Usage
ifeq ($(CONFIG_ZYXEL_TR69_DATA_USAGE),y)
CFLAGS += -DZYXEL_TR69_DATA_USAGE
endif

ifeq ($(CONFIG_ZYXEL_SUPPORT_TR181_DEVICEINFO_FAULTMGMT),y)
CFLAGS += -DZYXEL_SUPPORT_TR181_DEVICEINFO_FAULTMGMT
endif

#CBT
ifeq ($(CONFIG_CBT_CUSTOMIZATION),y)
CFLAGS += -DCBT_CUSTOMIZATION
endif

ifeq ($(CONFIG_ZYXEL_SUPPORT_TR098_BRCM_BONDING_LINE),y)
CFLAGS += -DZYXEL_SUPPORT_TR098_BRCM_BONDING_LINE
endif

ifeq ($(CONFIG_ZYXEL_SUPPORT_TR98_LOGIN_ACCOUNT),y)
CFLAGS += -DZYXEL_SUPPORT_TR98_LOGIN_ACCOUNT
endif

#Sunrise
ifneq ($(strip $(CONFIG_SUNRISE_STB_PROVISION)),)
CFLAGS += -DSUNRISE_STB_PROVISION
endif
ifneq ($(strip $(CONFIG_SUNRISE_TR98_CUSTOMIZATION)),)
CFLAGS += -DSUNRISE_TR98_CUSTOMIZATION
endif
ifeq ($(CONFIG_SUNRISE_RANDOM_PASSWORD),y)
CFLAGS += -DSUNRISE_RANDOM_PASSWORD
endif
ifeq ($(CONFIG_SUNRISE_BRIDGE_INDEX_CUSTOMIZATION),y)
CFLAGS += -DSUNRISE_BRIDGE_INDEX_CUSTOMIZATION
endif
ifeq ($(CONFIG_ZCFG_RUNNING_WANDEV_INDEX_CUSTOMIZATION),y)
CFLAGS += -DZCFG_RUNNING_WANDEV_INDEX_CUSTOMIZATION
endif

#SuperOnline
ifeq ($(CONFIG_SOL_TR69_AUTO_CHANGE_DHCP_POOL),y)
CFLAGS += -DSOL_TR69_AUTO_CHANGE_DHCP_POOL
endif
ifeq ($(CONFIG_SOL_TR69_FIREWALL_CONTROL),y)
CFLAGS += -DSOL_TR69_FIREWALL_CONTROL
endif
ifeq ($(CONFIG_SOL_TR69_3G_Backup),y)
CFLAGS += -DSOL_TR69_3G_Backup
endif
ifeq ($(CONFIG_SOL_TR69_TRUSTDOMAIN),y)
CFLAGS += -DSOL_TR69_TRUSTDOMAIN
endif
ifeq ($(CONFIG_SOL_TR69_LOGINACCOUNT),y)
CFLAGS += -DSOL_TR69_LOGINACCOUNT
endif
ifeq ($(CONFIG_SOL_TR69_NO_LAN_HOST),y)
CFLAGS += -DSOL_TR69_NO_LAN_HOST
endif

#WIND
ifeq ($(CONFIG_BUILD_ZYXEL_VOICE_CONFIG_TR069_FAXT38_ENABLE_MAPPING_TO_FAXMODE),y)
CFLAGS += -DZYXEL_VOICE_CONFIG_TR069_FAXT38_ENABLE_MAPPING_TO_FAXMODE
endif

## Wind ##
ifeq ($(CONFIG_WIND_ITALY_CUSTOMIZATION),y)
CFLAGS += -DZYXEL_WIND_ITALY_CUSTOMIZATION
endif

ifeq ($(CONFIG_WIND_CUSTOMIZATION),y)
CFLAGS += -DZYPRJ_CUSTOMER_WIND=1
endif

#ISKON
ifeq ($(CONFIG_USE_OLD_VOIP_PREFIX),y)
CFLAGS += -DUSE_OLD_VOIP_PREFIX
endif
ifeq ($(CONFIG_ISKON_CUSTOMIZATION),y)
CFLAGS += -DISKON_CUSTOMIZATION
endif

#ELISA
ifeq ($(CONFIG_ELISA_TR69_WANDSL_CUSTOMIZATION),y)
CFLAGS += -DELISA_TR69_WANDSL_CUSTOMIZATION
endif

#EasyMesh
ifeq ($(CONFIG_ZYXEL_EASYMESH),y)
    CFLAGS += -DZYXEL_EASYMESH
endif

## TELIA ##
ifeq ($(CONFIG_TELIA_CUSTOMIZATION),y)
CFLAGS += -DTELIA_CUSTOMIZATION
endif

#SONiQ Steering
ifeq ($(CONFIG_ZYXEL_SONIQ),y)
    CFLAGS += -DBUILD_SONIQ
endif
#SONiQ used but for all projects
CFLAGS += -DTOTAL_INTERFACE_24G=$(CONFIG_ZYXEL_WIFI_NUM_OF_24G_SSID_INTERFACE)
CFLAGS += -DTOTAL_INTERFACE_5G=$(CONFIG_ZYXEL_WIFI_NUM_OF_5G_SSID_INTERFACE)

#ONESSID
ifeq ($(CONFIG_ZYXEL_ONESSID),y)
    CFLAGS += -DZYXEL_ONESSID
endif

#VMG1312-T20A for BRAZIL
ifeq ($(CONFIG_BRAZIL_CUSTOMIZATION),y)
CFLAGS += -DBRAZIL_CUSTOMIZATION=1
endif

#ZYXEL_WIFI_SingleSKU
ifeq ($(CONFIG_ZYXEL_WIFI_SingleSKU),y)
CFLAGS += -DZYXEL_WIFI_SingleSKU=1
endif

ifeq ($(strip $(CONFIG_BUILD_ZYXEL_VOICE_CONFIG_TR069_SIP_PHONE_MAPPING_BY_STD_PHY_REFERENCE_LIST)),y)
CFLAGS += -DZYXEL_VOICE_CONFIG_TR069_SIP_PHONE_MAPPING_BY_STD_PHY_REFERENCE_LIST=1
endif

ifeq ($(CONFIG_ZCFG_ABANDON_NO_TR181_MAPPING_PARM),y)
CFLAGS += -DZCFG_ABANDON_NO_TR181_MAPPING_PARM
endif

ifeq ($(CONFIG_PACKAGE_ztr64),y)
CFLAGS += -DZCFG_TR64
endif

#Landing Page
ifeq ($(CONFIG_ZYXEL_LANDING_PAGE_FEATURE),y)
CFLAGS += -DZYXEL_LANDING_PAGE_FEATURE
endif

ifeq ($(CONFIG_ZCFG_TR98_PARAM_GUARD),y)
CFLAGS += -DZCFG_TR98_PARAM_GUARD
endif

#DMZ Management
ifeq ($(CONFIG_ZYXEL_SUPPORT_DMZ_MANAGEMENT),y)
CFLAGS += -DZYXEL_SUPPORT_DMZ_MANAGEMENT
endif

ifeq ($(CONFIG_ZCFG_QUERY_TR98_PARM_ATTR_LIST),y)
CFLAGS += -DZCFG_QUERY_TR98_PARM_ATTR_LIST
endif

ifeq ($(CONFIG_ZCFG_LOG_USE_DEBUGCFG),y)
CFLAGS += -DZCFG_LOG_USE_DEBUGCFG
CFLAGS += -DZCFG_ZYUTIL_DEBUG_API
CFLAGS += -DZCFG_TR98_LOG_USE_DEBUGCFG
endif

ifeq ($(CONFIG_ZYXEL_ELIMINATE_DHCP_LEASE),y)
CFLAGS += -DZYXEL_ELIMINATE_DHCP_LEASE
endif

ifeq ($(CONFIG_ZYXEL_WLAN_MAXBITRATE),y)
CFLAGS += -DZYXEL_WLAN_MAXBITRATE
endif

#Support tr98 Ipv6 Specific
ifeq ($(CONFIG_ZYXEL_TR98_IPV6SPECIFIC),y)
CFLAGS += -DZYXEL_IPV6SPEC
endif

#Support tr98 GRE
ifeq ($(CONFIG_ZYXEL_GRE),y)
CFLAGS += -DZYXEL_X_GRE
endif

ifeq ($(CONFIG_ZCFG_RPC_REQUEST_ADDITIONS),y)
CFLAGS += -DZCFG_RPC_REQUEST_ADDITIONS
endif

ifeq ($(CONFIG_ZYXEL_ACS_WPS_ACTIVATION),y)
CFLAGS += -DZYXEL_ACS_WPS_ACTIVATION
endif

ifeq ($(CONFIG_ZYXEL_SSH_PUBLIC_KEY_MGMT),y)
CFLAGS += -DZYXEL_SSH_PUBLIC_KEY_MGMT
endif

#XMPP
ifeq ($(CONFIG_PACKAGE_zxmppc),y)
CFLAGS += -DZYXEL_XMPP
endif

ifeq ($(CONFIG_ZYXEL_IMPROVE_SYSTEM_LOGS),y)
CFLAGS += -DZYXEL_IMPROVE_SYSTEM_LOGS
endif

ifeq ($(CONFIG_ZYXEL_TR471_UDP_SPEED_TEST),y)
CFLAGS += -DZYXEL_TR471_UDP_SPEED_TEST
endif

ifeq ($(CONFIG_MTKSOC_DELAY_REBOOT_SUPPORT),y)
CFLAGS += -DMTKSOC_DELAY_REBOOT_SUPPORT
endif
.PHONY : libzcfg_fe_tr98

all: clean libzcfg_fe_tr98

.c.o:
	$(CC) $(CFLAGS) -fPIC -Wall -std=gnu99 -c $< -o $@

libzcfg_fe_tr98: $(OBJ_FILES)
	$(CC) $(LDFLAGS) -shared -o libzcfg_fe_tr98.so $(OBJ_FILES)

install:
	install -m 755 libzcfg_fe_tr98.so $(INSTALL_DIR)/lib/public
	install -m 666 zcfg_fe_tr98.h $(COMMON_ZCFG_INCLUDE_DIR)

clean:
	rm -rf *.o
	rm -rf *.so
	rm -rf $(COMMON_ZCFG_INCLUDE_DIR)/zcfg_fe_tr98.h


